const Admin = require('../models/admin'); 

const adminController = {
    getAllAdmins: async (req, res) => {
        try {
            const admins = await Admin.findAll();
            res.json(admins);
        } catch (error) {
            res.status(500).send('Error retrieving admins: ' + error.message);
        }
    },

    getAdminDetails: async (req, res) => {
        try {
            const admin = await Admin.findByPk(req.params.id);
            if (!admin) {
                return res.status(404).send('Admin not found');
            }
            res.json(admin);
        } catch (error) {
            res.status(500).send('Error retrieving admin details: ' + error.message);
        }
    },

    createAdmin: async (req, res) => {
        try {
            const newAdmin = await Admin.create(req.body);
            res.status(201).json(newAdmin);
        } catch (error) {
            res.status(500).send('Error creating admin: ' + error.message);
        }
    },

    updateAdmin: async (req, res) => {
        try {
            const admin = await Admin.findByPk(req.params.id);
            if (!admin) {
                return res.status(404).send('Admin not found');
            }
            const updatedAdmin = await admin.update(req.body);
            res.json(updatedAdmin);
        } catch (error) {
            res.status(500).send('Error updating admin: ' + error.message);
        }
    },

    deleteAdmin: async (req, res) => {
        try {
            const admin = await Admin.findByPk(req.params.id);
            if (!admin) {
                return res.status(404).send('Admin not found');
            }
            await admin.destroy();
            res.send('Admin successfully deleted');
        } catch (error) {
            res.status(500).send('Error deleting admin: ' + error.message);
        }
    }
};

module.exports = adminController;

/*
Remember to create corresponding routes in your Express app that connect these controller methods to the appropriate HTTP methods and URL paths, 
similar to how you've done for users and orders. This will integrate the admin management functionality into your backend system.
*/